import BaseComponent from"./base-component.js";import EventHandler from"./dom/event-handler.js";import{enableDismissTrigger}from"./util/component-functions.js";import{defineJQueryPlugin}from"./util/index.js";const NAME="alert";const DATA_KEY="bs.alert";const EVENT_KEY=`.${DATA_KEY}`;const EVENT_CLOSE=`close${EVENT_KEY}`;const EVENT_CLOSED=`closed${EVENT_KEY}`;const CLASS_NAME_FADE="fade";const CLASS_NAME_SHOW="show";class Alert extends BaseComponent{static get NAME(){return NAME}close(){const closeEvent=EventHandler.trigger(this._element,EVENT_CLOSE);if(closeEvent.defaultPrevented){return}this._element.classList.remove(CLASS_NAME_SHOW);const isAnimated=this._element.classList.contains(CLASS_NAME_FADE);this._queueCallback(()=>this._destroyElement(),this._element,isAnimated)}_destroyElement(){this._element.remove();EventHandler.trigger(this._element,EVENT_CLOSED);this.dispose()}static jQueryInterface(config){return this.each(function(){const data=Alert.getOrCreateInstance(this);if(typeof config!=="string"){return}if(data[config]===undefined||config.startsWith("_")||config==="constructor"){throw new TypeError(`No method named "${config}"`)}data[config](this)})}}enableDismissTrigger(Alert,"close");defineJQueryPlugin(Alert);export default Alert;